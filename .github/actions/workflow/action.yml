name: Workflow
description: Perform common steps for getting changed files, setting up the environment, and running the main logic.
inputs:
  files:
    description: "File patterns to check for changes"
    required: true
    default: "posts/**"
outputs:
  any_changed:
    description: "All changed files"
    value: ${{ steps.get_changed_files.outputs.any_changed }}
runs:
  using: "composite"
  steps:
    - name: Get changed files in posts folder
      id: get_changed_files
      uses: tj-actions/changed-files@v44
      with:
        files: ${{ inputs.files }}
        json: "true"

    - name: get published files cache
      if: steps.get_changed_files.outputs.any_changed == 'true'
      shell: bash
      run: |
        if ! git ls-remote --heads origin | grep -q "refs/heads/processed_files"; then
          git checkout --orphan processed_files
          git rm -rf .
          echo "{}" > processed_files.json
          git add processed_files.json
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m "Initialize processed_files branch with processed_files.json"
          git push origin processed_files
          git checkout main
        fi
        git fetch origin processed_files:processed_files
        git checkout processed_files -- processed_files.json

    - name: Set up Python
      if: steps.get_changed_files.outputs.any_changed == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      if: steps.get_changed_files.outputs.any_changed == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Create env variables
      if: steps.get_changed_files.outputs.any_changed == 'true'
      shell: bash
      run: |
        echo "MASTODON_ACCESS_TOKEN=${{ secrets.MASTODON_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "BLUESKY_PASSWORD=${{ secrets.BLUESKY_PASSWORD }}" >> $GITHUB_ENV
        echo "MATRIX_ACCESS_TOKEN=${{ secrets.MATRIX_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "SLACK_ACCESS_TOKEN=${{ secrets.SLACK_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "MASTODON_EU_FR_TOKEN=${{ secrets.MASTODON_EU_FR_TOKEN }}" >> $GITHUB_ENV
        echo "CHANGED_FILES=${{ steps.get_changed_files.outputs.all_changed_files }}" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
